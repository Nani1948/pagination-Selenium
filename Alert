/*1.In Selenium or general web automation, there are three main types of alerts (also known as pop-ups or JavaScript alerts) that you may encounter:
		 * 1. Simple Alert or JavaScript
                A simple alert contains only an OK button.
                It is typically used for displaying information or warnings.
		 *            Alert alert = driver.switchTo().alert();
                      alert.accept(); // Clicks OK

		 * 2. Confirmation Alert
                 A confirmation alert contains OK and Cancel buttons.
                 It is used to confirm an action (e.g., deleting an item).
		 *                Alert alert = driver.switchTo().alert();
                          alert.accept(); // Clicks OK
                           alert.dismiss(); // Clicks Cancel
                3. Prompt Alert: it contains two or one input box
		 *           A prompt alert contains a text box, along with OK and Cancel buttons.
                 It is used when user input is required (e.g., entering a name).
                  Example: prompt("Please enter your name:");
                 Handling in Selenium:
		 *      Alert alert = driver.switchTo().alert();
               alert.sendKeys("Test User"); // Enters text
               alert.accept(); // Clicks OK
Note:
		 Verify the alert is present or not using WebDriverWait.
isDisplayed or isEnabled or is isSelected is applicable to check whether the webelement is present or not.
		 //isDisplayed or isEnabled or is isSelected is applicable for all the webelement but not for the alert.


 Alert alert = driver.switchTo().alert();
alert.accept();//close alert box using ok button
 alert1.sendKeys()//pass the text into input box inside the alert.
alert.getText();capture the text value from the alert
alert.dismiss();close alert box using cancel button
Ex:
	WebDriverManager.chromedriver().setup();
		  WebDriver driver=new ChromeDriver();
		  driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(30));
		  driver.get("https://practice-automation.com/");
		  
		  driver.manage().window().maximize();
		  driver.manage().deleteAllCookies();
		  WebElement popup=driver.findElement(By.xpath("//a[contains(text(), 'Popups')]"));
		  popup.click();
		  //1.alertbox-ok button
		  WebElement alertPopup=driver.findElement(By.xpath("//button[@id='alert']"));
		  alertPopup.click();
		  Alert alert = driver.switchTo().alert();
		  alert.accept();
		  //2,Confirm box-ok & cancel
		 WebElement confirmPopup=driver.findElement(By.xpath("//button[contains(@id, 'confirm')]"));
		 confirmPopup.click();
		 Thread.sleep(1000);
		 Alert alert1 = driver.switchTo().alert();
		 alert1.dismiss();
		 //3.Prompt Alert-Ok and cancel , imput textbox
		 WebElement PromptPopup=driver.findElement(By.xpath("//button[@id='prompt']"));
		 PromptPopup.click();
		 Alert alert2 = driver.switchTo().alert();
		 alert2.sendKeys("hello");
		 alert2.accept();
		 String res=driver.findElement(By.xpath("//p[@id='promptResult']")).getText();
		 if(res.contains("hello")) {
			 System.out.println("successful messages is displayed");
		 }
		 else {
			 System.out.println("successful messages is  not displayed");
		 }
Without accept or dismiss method:Using Explict Wait
or
How to capture alert box without using switchTo.alert()?
A)ExplictWait -We have method alertIsPresent() -to check whether alert box is present or not.

HandleAlertUsingExplicitWait

package com.seleniumcucumberframework.qa.alert;

import java.time.Duration;

import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import io.github.bonigarcia.wdm.WebDriverManager;

public class HandleAlertUsingExplicitWait {

	public static void main(String[] args) throws InterruptedException {
		WebDriverManager.chromedriver().setup();
		  WebDriver driver=new ChromeDriver();
		  driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(30));
		  driver.get("https://practice-automation.com/");
		  
		  driver.manage().window().maximize();
		  driver.manage().deleteAllCookies();
		  WebDriverWait wait=new WebDriverWait(driver,Duration.ofSeconds(10));
		   * 1. Simple Alert or JavaScript
		  WebElement popup=driver.findElement(By.xpath("//a[contains(text(), 'Popups')]"));
		  popup.click();
		  Thread.sleep(1000);
		  WebElement alertPopup=driver.findElement(By.xpath("//button[@id='alert']"));
		  alertPopup.click();
		  Alert myalert=wait.until(ExpectedConditions.alertIsPresent());
		  myalert.accept();
		   2. Confirmation Alert
		  
		  WebElement confirmPopup=driver.findElement(By.xpath("//button[contains(@id, 'confirm')]"));
			 confirmPopup.click();
			 Alert myalert1=wait.until(ExpectedConditions.alertIsPresent());
			  myalert1.accept();
			  
			  //3.Prompt Alert-Ok and cancel , imput textbox
				 WebElement PromptPopup=driver.findElement(By.xpath("//button[@id='prompt']"));
				 PromptPopup.click();
				 Alert myalert2=wait.until(ExpectedConditions.alertIsPresent());
				 myalert2.sendKeys("hello");
				 myalert2.accept();
				 String res=driver.findElement(By.xpath("//p[@id='promptResult']")).getText();
				 if(res.contains("hello")) {
					 System.out.println("successful messages is displayed");
				 }
				 else {
					 System.out.println("successful messages is  not displayed");
				 }
	}

}

3)Authentication Popup-Username and Password and click signin or cancel:
http://the-internet.herokuapp.com/basic_auth

it is alert box. we can't find the element using the locator. so we need by pass the particular box.

 //if you want inject username and password along with url
//Syntax:http://username:password@the-internet.herokuapp.com/basic_auth
Example:http://admin:admin@the-internet.herokuapp.com/basic_auth

public class AuthenticatePopupORAlert {

	public static void main(String[] args) {
		WebDriverManager.chromedriver().setup();
		  WebDriver driver=new ChromeDriver();
		  driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(30));
		  //if you want inject username and password along with url
		  //Syntax:http://username:password@the-internet.herokuapp.com/basic_auth
		  driver.get("http://admin:admin@the-internet.herokuapp.com/basic_auth");
		  driver.manage().window().maximize();
		  driver.manage().deleteAllCookies();
		 
          
	}

}
it will directly displayed successful login.
you want to use explict wait can be used for certain amount of time.
Note:

Alert come from the javascript alert butiln method in the javascript.
it will be call this method , it will be opened the alert box.it is not developed by the developer.so that we are unable to locate the element.

